# @middlewares: logging, assets
# @layout: base

Imports: from datetime import datetime
import random
import os

Funcoes: 
def saudacao(): 
    return "TagonPy + Tailwind CSS"

def get_framework_stats():
    return {
        'components': len([f for f in os.listdir('components') if f.endswith('.tg')]) if os.path.exists('components') else 1,
        'uptime': f"{random.randint(1, 99)} min",
        'requests': random.randint(100, 999),
        'version': "0.2.0"
    }

def get_features():
    return [
        {
            'icon': '‚ö°',
            'title': 'Lightning Fast',
            'description': 'Powered by FastAPI & Uvicorn',
            'color': 'bg-blue-500'
        },
        {
            'icon': 'üé®',
            'title': 'Tailwind CSS',
            'description': 'Utility-first CSS framework',
            'color': 'bg-cyan-500'
        },
        {
            'icon': 'üîÑ',
            'title': 'Hot Reload',
            'description': 'Instant development feedback',
            'color': 'bg-green-500'
        },
        {
            'icon': 'üõ†Ô∏è',
            'title': 'Developer First',
            'description': 'Built for productivity',
            'color': 'bg-yellow-500'
        }
    ]

Html:
<div class="min-h-screen bg-gradient-to-br from-gray-900 via-blue-900 to-purple-900">
    <!-- Hero Section -->
    <div class="relative">
        <!-- Background Pattern -->
        <div class="absolute inset-0 bg-black/20"></div>
        <div class="absolute inset-0" style="background-image: radial-gradient(circle at 1px 1px, rgba(255,255,255,0.05) 1px, transparent 0); background-size: 20px 20px;"></div>
        
        <!-- Content -->
        <div class="relative z-10 container mx-auto px-6 py-20 text-center">
            <!-- Logo -->
            <div class="flex items-center justify-center mb-8">
                <div class="text-6xl mr-4">üè∑Ô∏è</div>
                <h1 class="text-5xl md:text-7xl font-bold bg-gradient-to-r from-blue-400 to-purple-400 bg-clip-text text-transparent">
                    TagonPy
                </h1>
            </div>
            
            <!-- Tagline -->
            <p class="text-2xl md:text-3xl font-bold text-white mb-6">
                {{ saudacao() }}
            </p>
            
            <!-- Subtitle -->
            <p class="text-lg text-gray-300 mb-10 max-w-2xl mx-auto leading-relaxed">
                Build modern, reactive web applications with the simplicity of Python components 
                and the power of <span class="text-cyan-400 font-semibold">Tailwind CSS</span>
            </p>
            
            <!-- Buttons -->
            <div class="flex flex-col sm:flex-row gap-4 justify-center mb-16">
                <button class="tagonpy-button bg-gradient-to-r from-blue-500 to-purple-500 hover:from-blue-600 hover:to-purple-600 px-8 py-4 rounded-full font-semibold text-lg transform hover:scale-105 transition-all duration-200 shadow-lg">
                    Get Started
                    <span class="ml-2">‚Üí</span>
                </button>
                
                <button class="px-8 py-4 rounded-full font-semibold text-lg border-2 border-white/20 text-white hover:bg-white/10 backdrop-blur-sm transition-all duration-200">
                    View Docs
                </button>
            </div>
            
            <!-- Terminal Demo -->
            <div class="max-w-2xl mx-auto">
                <div class="bg-gray-800/50 backdrop-blur-md rounded-xl border border-white/10 overflow-hidden shadow-2xl">
                    <!-- Terminal Header -->
                    <div class="flex items-center px-4 py-3 bg-gray-700/50 border-b border-white/10">
                        <div class="flex space-x-2">
                            <div class="w-3 h-3 bg-red-500 rounded-full"></div>
                            <div class="w-3 h-3 bg-yellow-500 rounded-full"></div>
                            <div class="w-3 h-3 bg-green-500 rounded-full"></div>
                        </div>
                        <div class="flex-1 text-center text-gray-400 font-mono text-sm">Terminal</div>
                    </div>
                    
                    <!-- Terminal Body -->
                    <div class="p-4 font-mono text-sm text-left">
                        <div class="text-green-400">
                            <span class="text-blue-400">$</span> pip install tagonpy
                        </div>
                        <div class="text-green-400 mt-2">
                            <span class="text-blue-400">$</span> tagonpy create-app my-app
                        </div>
                        <div class="text-green-400 mt-2">
                            <span class="text-blue-400">$</span> cd my-app && tagonpy serve
                        </div>
                        <div class="text-gray-400 mt-2">
                            üöÄ Server running on http://localhost:3000
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Stats Section -->
    <div class="bg-white/5 backdrop-blur-md border-y border-white/10 py-12">
        <div class="container mx-auto px-6">
            <div class="grid grid-cols-2 md:grid-cols-4 gap-8 text-center">
                <div class="tagonpy-card bg-white/10 backdrop-blur-sm border border-white/20">
                    <div class="text-3xl font-bold text-blue-400">{{ get_framework_stats()['components'] }}</div>
                    <div class="text-gray-300 text-sm uppercase tracking-wide">Components</div>
                </div>
                
                <div class="tagonpy-card bg-white/10 backdrop-blur-sm border border-white/20">
                    <div class="text-3xl font-bold text-green-400">{{ get_framework_stats()['uptime'] }}</div>
                    <div class="text-gray-300 text-sm uppercase tracking-wide">Uptime</div>
                </div>
                
                <div class="tagonpy-card bg-white/10 backdrop-blur-sm border border-white/20">
                    <div class="text-3xl font-bold text-purple-400">{{ get_framework_stats()['requests'] }}</div>
                    <div class="text-gray-300 text-sm uppercase tracking-wide">Requests</div>
                </div>
                
                <div class="tagonpy-card bg-white/10 backdrop-blur-sm border border-white/20">
                    <div class="text-3xl font-bold text-yellow-400">v{{ get_framework_stats()['version'] }}</div>
                    <div class="text-gray-300 text-sm uppercase tracking-wide">Version</div>
                </div>
            </div>
        </div>
    </div>

    <!-- Features Section -->
    <div class="py-20">
        <div class="container mx-auto px-6">
            <div class="text-center mb-16">
                <h2 class="text-4xl md:text-5xl font-bold text-white mb-6">
                    Why Choose TagonPy?
                </h2>
                <p class="text-xl text-gray-300 max-w-2xl mx-auto">
                    Everything you need to build modern web applications with Python
                </p>
            </div>
            
            <div class="grid md:grid-cols-2 lg:grid-cols-4 gap-8">
                {% for feature in get_features() %}
                <div class="group cursor-pointer">
                    <div class="bg-white/5 backdrop-blur-sm border border-white/10 rounded-xl p-6 h-full transition-all duration-300 hover:bg-white/10 hover:border-white/20 hover:transform hover:scale-105">
                        <div class="flex items-center justify-center w-16 h-16 {{ feature['color'] }} rounded-xl mb-4 text-2xl group-hover:scale-110 transition-transform duration-300">
                            {{ feature['icon'] }}
                        </div>
                        
                        <h3 class="text-xl font-semibold text-white mb-2">
                            {{ feature['title'] }}
                        </h3>
                        
                        <p class="text-gray-300 leading-relaxed">
                            {{ feature['description'] }}
                        </p>
                    </div>
                </div>
                {% endfor %}
            </div>
        </div>
    </div>

    <!-- Code Example Section -->
    <div class="bg-black/30 py-20">
        <div class="container mx-auto px-6">
            <div class="text-center mb-12">
                <h2 class="text-3xl font-bold text-white mb-4">
                    Beautiful Components, Simple Syntax
                </h2>
                <p class="text-gray-300">
                    Write Python functions, return HTML with Tailwind classes
                </p>
            </div>
            
            <div class="max-w-4xl mx-auto">
                <div class="bg-gray-900/80 backdrop-blur-md rounded-xl border border-white/10 overflow-hidden">
                    <!-- Code Header -->
                    <div class="flex items-center px-6 py-4 bg-gray-800/50 border-b border-white/10">
                        <div class="flex space-x-2">
                            <div class="w-3 h-3 bg-red-500 rounded-full"></div>
                            <div class="w-3 h-3 bg-yellow-500 rounded-full"></div>
                            <div class="w-3 h-3 bg-green-500 rounded-full"></div>
                        </div>
                        <div class="flex-1 text-center text-gray-400 font-mono text-sm">component.tg</div>
                    </div>
                    
                    <!-- Code Content -->
                    <div class="p-6 font-mono text-sm overflow-x-auto">
<pre class="text-gray-300"><span class="text-purple-400">Imports:</span> <span class="text-green-400">from datetime import datetime</span>

<span class="text-purple-400">Funcoes:</span>
<span class="text-blue-400">def</span> <span class="text-yellow-400">welcome_message</span>():
    <span class="text-blue-400">return</span> <span class="text-green-400">"Welcome to TagonPy!"</span>

<span class="text-purple-400">Html:</span>
<span class="text-red-400">&lt;div</span> <span class="text-cyan-400">class</span>=<span class="text-green-400">"bg-blue-500 text-white p-6 rounded-lg"</span><span class="text-red-400">&gt;</span>
    <span class="text-red-400">&lt;h1</span> <span class="text-cyan-400">class</span>=<span class="text-green-400">"text-2xl font-bold"</span><span class="text-red-400">&gt;</span>{{ welcome_message() }}<span class="text-red-400">&lt;/h1&gt;</span>
    <span class="text-red-400">&lt;p</span> <span class="text-cyan-400">class</span>=<span class="text-green-400">"text-blue-100"</span><span class="text-red-400">&gt;</span>Built with Tailwind CSS<span class="text-red-400">&lt;/p&gt;</span>
<span class="text-red-400">&lt;/div&gt;</span></pre>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Status Section -->
    <div class="py-12 border-t border-white/10">
        <div class="container mx-auto px-6">
            <div class="max-w-2xl mx-auto">
                <div class="bg-green-500/10 border border-green-500/20 rounded-xl p-6 backdrop-blur-sm">
                    <div class="flex items-center justify-between mb-4">
                        <h3 class="text-xl font-semibold text-white">System Status</h3>
                        <div class="flex items-center text-green-400">
                            <div class="w-2 h-2 bg-green-400 rounded-full mr-2 animate-pulse"></div>
                            <span class="font-medium">All Systems Operational</span>
                        </div>
                    </div>
                    
                    <div class="grid sm:grid-cols-2 gap-4 text-sm">
                        <div class="flex justify-between">
                            <span class="text-gray-300">Generated at:</span>
                            <span class="text-white font-mono">{{ datetime.now().strftime("%H:%M:%S") }}</span>
                        </div>
                        
                        <div class="flex justify-between">
                            <span class="text-gray-300">Environment:</span>
                            <span class="text-cyan-400 font-medium">Development</span>
                        </div>
                        
                        <div class="flex justify-between">
                            <span class="text-gray-300">Port:</span>
                            <span class="text-white font-mono">3000</span>
                        </div>
                        
                        <div class="flex justify-between">
                            <span class="text-gray-300">Tailwind CSS:</span>
                            <span class="text-green-400 font-medium">Active</span>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Footer -->
    <div class="border-t border-white/10 py-8">
        <div class="container mx-auto px-6 text-center">
            <p class="text-gray-400">
                Built with ‚ù§Ô∏è using TagonPy + Tailwind CSS
            </p>
        </div>
    </div>
</div>

Css:
/* Fallback CSS - Tailwind deve sobrescrever */
.tagonpy-app {
    background: #1a1a2e;
    color: #ffffff;
    min-height: 100vh;
}