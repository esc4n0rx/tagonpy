# @middlewares: logging
# @guards: none

Imports: from datetime import datetime
import random
import os

Funcoes:
def welcome_message():
    return "TagonPy + Tailwind CSS - Funcionandoooooooo"
def saudacao():
    return "TagonPy + Tailwind CSS"

def get_framework_stats():
    return {
        'components': len([f for f in os.listdir('components') if f.endswith('.tg')]) if os.path.exists('components') else 1,
        'uptime': f"{random.randint(1, 99)} min",
        'requests': random.randint(100, 999),
        'version': "0.2.0"
    }

def get_features():
    return [
        {
            'icon': '‚ö°',
            'title': 'Lightning Fast',
            'description': 'Powered by FastAPI & Uvicorn',
            'color': 'bg-blue-500'
        },
        {
            'icon': 'üé®',
            'title': 'Tailwind CSS',
            'description': 'Utility-first CSS framework',
            'color': 'bg-cyan-500'
        },
        {
            'icon': 'üîÑ',
            'title': 'Hot Reload',
            'description': 'Instant development feedback',
            'color': 'bg-green-500'
        },
        {
            'icon': 'üõ†Ô∏è',
            'title': 'Developer First',
            'description': 'Built for productivity',
            'color': 'bg-yellow-500'
        }
    ]

Html:
<div class="tagonpy-app min-h-screen bg-gray-900 text-white">
    <div class="container mx-auto px-4 py-8">
        <header class="text-center mb-12">
            <div class="flex items-center justify-center mb-6">
                <span class="text-6xl mr-4">üè∑Ô∏è</span>
                <h1 class="text-5xl font-bold bg-gradient-to-r from-blue-400 to-cyan-400 bg-clip-text text-transparent">
                    TagonPy
                </h1>
            </div>
            <h2 class="text-2xl font-semibold text-gray-300 mb-4">{{ welcome_message() }}</h2>
            <p class="text-lg text-gray-400 max-w-2xl mx-auto">
                Framework web moderno com roteamento avan√ßado, middlewares e Tailwind CSS integrado
            </p>
        </header>

        <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6 mb-12">
            <div class="bg-gray-800 rounded-lg p-6 text-center">
                <div class="text-3xl font-bold text-blue-400 mb-2">{{ get_framework_stats()['components'] }}</div>
                <div class="text-gray-400">Componentes</div>
            </div>
            <div class="bg-gray-800 rounded-lg p-6 text-center">
                <div class="text-3xl font-bold text-green-400 mb-2">{{ get_framework_stats()['uptime'] }}</div>
                <div class="text-gray-400">Uptime</div>
            </div>
            <div class="bg-gray-800 rounded-lg p-6 text-center">
                <div class="text-3xl font-bold text-yellow-400 mb-2">{{ get_framework_stats()['requests'] }}</div>
                <div class="text-gray-400">Requests</div>
            </div>
            <div class="bg-gray-800 rounded-lg p-6 text-center">
                <div class="text-3xl font-bold text-purple-400 mb-2">v{{ get_framework_stats()['version'] }}</div>
                <div class="text-gray-400">Version</div>
            </div>
        </div>

        <div class="grid grid-cols-1 md:grid-cols-2 gap-8 mb-12">
            {% for feature in get_features() %}
            <div class="bg-gray-800 rounded-lg p-6 hover:bg-gray-750 transition-colors">
                <div class="flex items-start">
                    <div class="text-4xl mr-4">{{ feature['icon'] }}</div>
                    <div>
                        <h3 class="text-xl font-semibold mb-2">{{ feature['title'] }}</h3>
                        <p class="text-gray-400">{{ feature['description'] }}</p>
                    </div>
                </div>
            </div>
            {% endfor %}
        </div>

        <div class="bg-gray-800 rounded-lg p-6 text-center">
            <h3 class="text-xl font-semibold mb-4">Status do Servidor</h3>
            <div class="flex justify-center items-center space-x-4">
                <div class="flex items-center">
                    <div class="w-3 h-3 bg-green-400 rounded-full mr-2"></div>
                    <span>Online</span>
                </div>
                <div class="text-gray-400">‚Ä¢</div>
                <div>Gerado em: {{ datetime.now().strftime("%d/%m/%Y √†s %H:%M:%S") }}</div>
            </div>
        </div>
    </div>
</div>

Css:
/* CSS b√°sico como fallback */
.tagonpy-app {
    font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;
}

.bg-gray-750 {
    background-color: #374151;
}