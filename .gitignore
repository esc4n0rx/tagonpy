# ============================================
# TagonPy Framework - Git Ignore Rules
# ============================================

# === PYTHON ===
# Byte-compiled / optimized / DLL files
__pycache__/
*.py[cod]
*$py.class

# C extensions
*.so

# Distribution / packaging
.Python
build/
develop-eggs/
dist/
downloads/
eggs/
.eggs/
lib/
lib64/
parts/
sdist/
var/
wheels/
pip-wheel-metadata/
share/python-wheels/
*.egg-info/
.installed.cfg
*.egg
MANIFEST

# PyInstaller
#  Usually these files are written by a python script from a template
#  before PyInstaller builds the exe, so as to inject date/other infos into it.
*.manifest
*.spec

# Installer logs
pip-log.txt
pip-delete-this-directory.txt

# Unit test / coverage reports
htmlcov/
.tox/
.nox/
.coverage
.coverage.*
.cache
nosetests.xml
coverage.xml
*.cover
*.py,cover
.hypothesis/
.pytest_cache/

# Translations
*.mo
*.pot

# Django stuff:
*.log
local_settings.py
db.sqlite3
db.sqlite3-journal

# Flask stuff:
instance/
.webassets-cache

# Scrapy stuff:
.scrapy

# Sphinx documentation
docs/_build/

# PyBuilder
target/

# Jupyter Notebook
.ipynb_checkpoints

# IPython
profile_default/
ipython_config.py

# pyenv
.python-version

# pipenv
#   According to pypa/pipenv#598, it is recommended to include Pipfile.lock in version control.
#   However, in case of collaboration, if having platform-specific dependencies or dependencies
#   having no cross-platform support, pipenv may install dependencies that don't work, or not
#   install all needed dependencies.
#Pipfile.lock

# PEP 582; used by e.g. github.com/David-OConnor/pyflow
__pypackages__/

# Celery stuff
celerybeat-schedule
celerybeat.pid

# SageMath parsed files
*.sage.py

# Environments
.env
.venv
env/
venv/
ENV/
env.bak/
venv.bak/
.envrc

# Spyder project settings
.spyderproject
.spyproject

# Rope project settings
.ropeproject

# mkdocs documentation
/site

# mypy
.mypy_cache/
.dmypy.json
dmypy.json

# Pyre type checker
.pyre/

# === TAGONPY ESPECÍFICO ===
# Logs do TagonPy
*.tagonpy.log
tagonpy-*.log
server.log
development.log

# Cache de componentes
.tagonpy-cache/
.component-cache/

# Arquivos temporários de desenvolvimento
temp/
tmp/
.tmp/

# Backups automáticos
*.backup
*.bak
*~

# Arquivos de configuração local
config.local.py
settings.local.py
.local.env

# Build e distribuição do TagonPy
build/
dist/
*.tar.gz
*.zip

# === IDEs e EDITORES ===
# Visual Studio Code
.vscode/
!.vscode/settings.json
!.vscode/tasks.json
!.vscode/launch.json
!.vscode/extensions.json
*.code-workspace

# PyCharm
#  JetBrains specific template is maintained in a separate JetBrains.gitignore that can
#  be added to the global gitignore or merged into this file.  For a more nuclear
#  option (not recommended) you can uncomment the following to ignore the entire idea folder.
.idea/
*.iws
*.iml
*.ipr

# Sublime Text
*.tmlanguage.cache
*.tmPreferences.cache
*.stTheme.cache
*.sublime-workspace
*.sublime-project

# Vim
*.swp
*.swo
*~

# Emacs
*~
\#*\#
/.emacs.desktop
/.emacs.desktop.lock
*.elc
auto-save-list
tramp
.\#*

# Atom
.atom/

# === SISTEMA OPERACIONAL ===
# Windows
Thumbs.db
Thumbs.db:encryptable
ehthumbs.db
ehthumbs_vista.db
*.stackdump
[Dd]esktop.ini
$RECYCLE.BIN/
*.cab
*.msi
*.msix
*.msm
*.msp
*.lnk

# macOS
.DS_Store
.AppleDouble
.LSOverride
Icon
._*
.DocumentRevisions-V100
.fseventsd
.Spotlight-V100
.TemporaryItems
.Trashes
.VolumeIcon.icns
.com.apple.timemachine.donotpresent
.AppleDB
.AppleDesktop
Network Trash Folder
Temporary Items
.apdisk

# Linux
*~
.fuse_hidden*
.directory
.Trash-*
.nfs*

# === BANCOS DE DADOS ===
*.db
*.sqlite
*.sqlite3
*.db-journal

# === LOGS ===
logs/
*.log
npm-debug.log*
yarn-debug.log*
yarn-error.log*

# === NODE.JS (caso use ferramentas JS) ===
node_modules/
npm-debug.log*
yarn-debug.log*
yarn-error.log*
.npm
.eslintcache
.node_repl_history
*.tgz
.yarn-integrity
.pnp.*

# === OUTROS ===
# Archives
*.7z
*.dmg
*.gz
*.iso
*.jar
*.rar
*.tar
*.zip

# Certificates
*.pem
*.key
*.crt

# SSH Keys
id_rsa
id_rsa.pub
*.ppk

# === DESENVOLVIMENTO ===
# Arquivos de teste local
test_local/
experiments/
playground/

# Screenshots e mídia de desenvolvimento
screenshots/
screen_*.png
demo_*.gif

# Documentação gerada
docs/build/
docs/_build/

# === PERFORMANCE ===
# Profiling
*.prof
*.cProfile

# === SEGURANÇA ===
# Não versionar credenciais
secrets.py
passwords.txt
api_keys.txt
.secrets

# === DOCKER ===
# Docker
.dockerignore
docker-compose.override.yml

# === CI/CD ===
# GitHub Actions
.github/workflows/local-*

# === JUPYTER ===
.jupyter/
*.ipynb_checkpoints

# === COVERAGE ===
.coverage
htmlcov/
.tox/
coverage.xml

# === PYTEST ===
.pytest_cache/
tests/__pycache__/

# === CUSTOM ===
# Adicione aqui arquivos específicos do seu projeto
# exemplo:
# meu_arquivo_pessoal.txt
# config_personalizada.py